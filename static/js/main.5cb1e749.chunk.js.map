{"version":3,"sources":["components/Loader/Loader.tsx","components/Searchbar/Searchbar.tsx","components/Button/Button.tsx","services/gallery-service.ts","components/Context/Context.js","components/ImageGallery/ImageGallery.tsx","components/ImageGalleryItem/ImageGalleryItem.tsx","components/Section/Section.tsx","components/IconButton/IconButton.tsx","components/Modal/Modal.tsx","components/DefaultEmpyField/DefaultEmptyField.tsx","App.tsx","index.tsx"],"names":["LoaderSpinner","className","type","color","height","width","timeout","Searchbar","onSubmit","useState","query","setQuery","Provider","value","size","event","preventDefault","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","memo","Button","onClick","fetchGallery","currentPage","axios","get","then","response","console","log","data","hits","createContext","ImageGallery","gallery","map","image","id","webformatURL","largeImageURL","previewURL","Consumer","hadleImageClick","src","data-src","alt","data-large","ImageGalleryItem","Section","children","IconButton","allyProps","defaultProps","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","target","aria-label","fill","DefaultEmptyField","App","setGallery","setPage","isLoading","setLoading","search","setSearch","selectedImgURL","setSelectedImgURL","isModalOpen","setModal","selectedLowQImgUrl","setSelectedLowQImgUrl","images","state","catch","error","toast","finally","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","length","newestOnTop","rtl","pauseOnFocusLoss","draggablePercent","nodeName","fullImgLink","getAttribute","lowSrc","body","style","overflowY","options","top","behavior","pageYOffset","documentElement","clientHeight","setTimeout","scrollTo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cb1e749.chunk.js","sourcesContent":["import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './Loader.css';\n\nexport default function LoaderSpinner() {\n  return (\n    <Loader\n      className=\"Loader App-logo\"\n      type=\"Circles\"\n      color=\"#00BFFF\"\n      height={300}\n      width={300}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import React, { useState, memo } from 'react';\nimport { FaSearchengin } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\n\nimport './Searchbar.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface Props {\n  onSubmit(query: string): void;\n}\n\nfunction Searchbar({ onSubmit }: Props) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <div className=\"logobox\">\n        <IconContext.Provider\n          value={{ color: 'black', size: '1.5em', className: 'react-icons' }}\n        >\n          <div className=\"logobox__icon\">\n            <FaSearchengin />\n          </div>\n        </IconContext.Provider>\n        <span className=\"logobox__text\">Search and Save</span>\n      </div>\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          value={query}\n          className=\"SearchForm-input\"\n          name=\"form_input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default memo(Searchbar);\n","import React from 'react';\nimport './Button.css';\n\ninterface IButton {\n  onClick(): void;\n}\n\nexport default function Button({ onClick }: IButton) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '18944189-177b692c9d9a1e8dfd1f135d6';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n// axios.defaults.headers.common['Aithorization'] = 'Bearer 18944189-177b692c9d9a1e8dfd1f135d6'\n\ninterface IResponeObj {\n  id: number;\n  webformatURL: string;\n  largeImageURL: string;\n  previewURL: string;\n  [key: string]: any;\n}\n\ntype fetchType = (query: string, currentPage: number) => Promise<IResponeObj[]>;\n\nconst fetchGallery: fetchType = (query, currentPage) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${query}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(response => {\n      console.log(response.data.hits);\n      return response.data.hits;\n    });\n};\n\nexport default fetchGallery;\n","import { createContext } from 'react';\n\nexport default createContext();\n","import React from 'react';\nimport './ImageGallery.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\ninterface IImageGallery {\n  gallery: {\n    id: number;\n    webformatURL: string;\n    largeImageURL: string;\n    previewURL: string;\n  }[];\n}\n\nexport default function ImageGallery({ gallery }: IImageGallery) {\n  return (\n    <ul className=\"ImageGallery\">\n      {gallery.map(image => ImageGalleryItem(image))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport './ImageGalleryItem.css';\nimport authContext from '../Context';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\ninterface Props {\n  id: number;\n  webformatURL: string;\n  largeImageURL: string;\n  previewURL: string;\n}\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  largeImageURL,\n  previewURL,\n}: Props) {\n  return (\n    <li className=\"ImageGalleryItem\" key={`id-${id}`}>\n      <authContext.Consumer>\n        {hadleImageClick => (\n          <img\n            src={previewURL}\n            data-src={webformatURL}\n            alt=\"searchedPicture\"\n            data-large={largeImageURL}\n            className=\"ImageGalleryItem-image lazyload blur-up\"\n            onClick={hadleImageClick}\n          />\n        )}\n      </authContext.Consumer>\n    </li>\n  );\n}\n","import React from 'react';\nimport './Section.css';\n\ninterface Props {\n  children: React.ReactChild | React.ReactElement | Element;\n}\n\nexport default function Section({ children }: Props) {\n  return <div className=\"Section\">{children}</div>;\n}\n","import React from 'react';\nimport './IconButton.scss';\n\ninterface Props {\n  className?: string;\n  children: React.ReactChild;\n  onClick(): void;\n  allyProps?: any[];\n}\n\nconst IconButton = ({ className, children, onClick, ...allyProps }: Props) => (\n  <button\n    type=\"button\"\n    className={className ? className : 'IconButton'}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nexport default IconButton;\n","import React, { MouseEvent, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.scss';\nimport IconButton from '../IconButton/IconButton';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nconst modalRoot = document.querySelector('#modal-root');\n\ninterface Props {\n  onClose(): void;\n  children?: React.ReactChild;\n}\n\n// переиспользуемая модалка, как children любой контент передаем\nexport default function Modal({ onClose, children }: Props) {\n  useEffect(() => {\n    // закрытие по клику эскпейпа\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown);\n\n    return function clearup() {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose, children]);\n\n  //   закрытие по клику в бэкдроп\n  function handelBackdropClick(e: MouseEvent): void {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  }\n\n  // \"портал\" для модалки (убирает костыль с z-index и оверфлоу)\n  return createPortal(\n    <div className=\"Modal__backdrop\" onClick={handelBackdropClick}>\n      <div className=\"Modal__content\">\n        <IconButton\n          className=\"Modal__close IconButton\"\n          aria-label=\"Close Modal icon\"\n          onClick={onClose}\n        >\n          <AiOutlineCloseCircle size=\"2.9em\" fill=\"#black\" />\n        </IconButton>\n        {children}\n      </div>\n    </div>,\n    modalRoot as Element,\n  );\n}\n","import React from 'react';\nimport './DefaultEmptyField.css';\n\nexport default function DefaultEmptyField() {\n  return (\n    <div className=\"emptyField\">\n      <h2 className=\"emptyField__text\">\n        It's so empty, enter some request and enjoy hundreds of pictures!\n      </h2>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'lazysizes';\nimport { ToastContainer, toast } from 'react-toastify';\nimport LoaderSpinner from './components/Loader';\nimport Seachbar from './components/Searchbar';\nimport Button from './components/Button';\nimport fetchGallery from './services/gallery-service';\nimport ImageGallery from './components/ImageGallery';\nimport Section from './components/Section';\nimport Modal from './components/Modal';\nimport DefaultEmptyField from './components/DefaultEmpyField';\nimport authContext from './components/Context';\n\ninterface Image {\n  id: number;\n  webformatURL: string;\n  largeImageURL: string;\n  previewURL: string;\n}\n\ntype OptionType = {\n  top: undefined | number;\n  behavior: 'smooth' | 'auto' | undefined;\n};\n\nconst App = () => {\n  const [gallery, setGallery] = useState<Image[] | []>([]);\n  const [currentPage, setPage] = useState(1);\n  const [isLoading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [selectedImgURL, setSelectedImgURL] = useState('');\n  const [isModalOpen, setModal] = useState(false);\n  const [selectedLowQImgUrl, setSelectedLowQImgUrl] = useState('');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    setLoading(true);\n    fetchGallery(search, currentPage)\n      .then(images => {\n        setGallery(state => [...state, ...images]);\n      })\n      .catch(error => toast(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [currentPage, search]);\n\n  function onLoadMoreBtnClick() {\n    setPage(state => state + 1);\n    const options: OptionType = {\n      top: undefined,\n      behavior: 'smooth',\n    };\n\n    options.top =\n      window.pageYOffset + document.documentElement.clientHeight - 150;\n    setTimeout(() => {\n      window.scrollTo(options);\n    }, 1000);\n  }\n\n  const handleSubmit = (query: string): void => {\n    if (query !== search) {\n      setGallery([]);\n      setSearch(query);\n      setPage(1);\n    }\n\n    if (!query) {\n      const notify = () =>\n        toast.info('🚀 Search field is empty!', {\n          position: 'top-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined,\n        });\n      notify();\n\n      return;\n    }\n  };\n\n  const hadleImageClick = (\n    e: React.MouseEvent<HTMLImageElement, MouseEvent>,\n  ) => {\n    if (e.currentTarget.nodeName !== 'IMG') {\n      return;\n    }\n\n    e.preventDefault();\n\n    const fullImgLink = e.currentTarget.getAttribute('data-large') as string;\n    const lowSrc = e.currentTarget.getAttribute('src') as string;\n\n    setSelectedImgURL(fullImgLink);\n    setSelectedLowQImgUrl(lowSrc);\n    setModal(true);\n  };\n\n  const toggleModal = (): void => {\n    setModal(!isModalOpen);\n\n    if (isModalOpen) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  return (\n    <>\n      <Seachbar onSubmit={handleSubmit} />\n\n      {gallery.length === 0 && <DefaultEmptyField />}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        draggablePercent={60}\n      />\n\n      {isLoading && (\n        <Section>\n          <LoaderSpinner />\n        </Section>\n      )}\n\n      <authContext.Provider value={hadleImageClick}>\n        {search && <ImageGallery gallery={gallery} />}\n      </authContext.Provider>\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <img\n            src={selectedLowQImgUrl}\n            data-src={selectedImgURL}\n            alt=\"fullsizeImage\"\n            className=\"lazyload blur-up modal-img\"\n          ></img>\n        </Modal>\n      )}\n      {search && gallery.length > 11 && (\n        <Section>\n          <Button onClick={onLoadMoreBtnClick} />\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}